{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan Robu\\\\OneDrive\\\\Desktop\\\\school\\\\anul 3\\\\TD\\\\TD-front-back-BD\\\\CasinoAPI\\\\Frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Simbolurile din slot\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SYMBOLS = ['🍒', '🍋', '🍇', '🔔', '🍉', '⭐', '👑', '7️⃣'];\n\n// Generare simbol aleator\nconst getRandomSymbol = () => SYMBOLS[Math.floor(Math.random() * SYMBOLS.length)];\n\n// Dimensiuni role\nconst REELS = 5;\nconst ROWS = 3;\nconst SlotMachine = () => {\n  _s();\n  // Starea rolelor: matrice 5 coloane x 3 rânduri simboluri\n  const [reels, setReels] = useState(Array.from({\n    length: REELS\n  }, () => Array.from({\n    length: ROWS\n  }, getRandomSymbol)));\n\n  // Starea pentru animatie \"spinning\"\n  const [spinning, setSpinning] = useState(false);\n  const spin = () => {\n    if (spinning) return; // prevenim spam click\n\n    setSpinning(true);\n\n    // Simulăm \"învârtirea\" cu delay-uri\n    let spinsCount = 0;\n    const maxSpins = 10;\n    const interval = setInterval(() => {\n      setReels(Array.from({\n        length: REELS\n      }, () => Array.from({\n        length: ROWS\n      }, getRandomSymbol)));\n      spinsCount++;\n      if (spinsCount >= maxSpins) {\n        clearInterval(interval);\n        setSpinning(false);\n      }\n    }, 150); // actualizare simboluri la fiecare 150ms\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: 50,\n      color: '#fff',\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFB0 Slot Machine - Shiny Crown Style \\uD83C\\uDFB0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: 12,\n        marginBottom: 30,\n        backgroundColor: '#222',\n        padding: 20,\n        borderRadius: 12,\n        boxShadow: '0 0 15px gold',\n        width: 'fit-content',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      children: reels.map((col, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 12,\n          backgroundColor: '#111',\n          padding: 10,\n          borderRadius: 8,\n          width: 70,\n          boxShadow: 'inset 0 0 10px #facc15'\n        },\n        children: col.map((symbol, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 60,\n            height: 60,\n            fontSize: 38,\n            backgroundColor: '#000',\n            color: 'gold',\n            borderRadius: 6,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            boxShadow: 'inset 0 0 8px rgba(255,255,255,0.5)',\n            userSelect: 'none'\n          },\n          children: symbol\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spin,\n      disabled: spinning,\n      style: {\n        padding: '12px 28px',\n        fontSize: 18,\n        fontWeight: 'bold',\n        backgroundColor: spinning ? '#444' : '#10b981',\n        border: 'none',\n        borderRadius: 8,\n        color: 'white',\n        cursor: spinning ? 'not-allowed' : 'pointer',\n        boxShadow: spinning ? 'none' : '0 0 10px #10b981',\n        transition: 'background-color 0.3s'\n      },\n      children: spinning ? 'Se învârte...' : 'Rulează roata! 🎰'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotMachine, \"4qhrYtczDMIMuU6Dzy0rJzXtSzk=\");\n_c = SlotMachine;\nexport default SlotMachine;\nvar _c;\n$RefreshReg$(_c, \"SlotMachine\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SYMBOLS","getRandomSymbol","Math","floor","random","length","REELS","ROWS","SlotMachine","_s","reels","setReels","Array","from","spinning","setSpinning","spin","spinsCount","maxSpins","interval","setInterval","clearInterval","style","textAlign","marginTop","color","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","marginBottom","backgroundColor","padding","borderRadius","boxShadow","width","marginLeft","marginRight","map","col","colIndex","flexDirection","symbol","rowIndex","height","fontSize","alignItems","userSelect","onClick","disabled","fontWeight","border","cursor","transition","_c","$RefreshReg$"],"sources":["C:/Users/Stefan Robu/OneDrive/Desktop/school/anul 3/TD/TD-front-back-BD/CasinoAPI/Frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Simbolurile din slot\r\nconst SYMBOLS = ['🍒', '🍋', '🍇', '🔔', '🍉', '⭐', '👑', '7️⃣'];\r\n\r\n// Generare simbol aleator\r\nconst getRandomSymbol = () => SYMBOLS[Math.floor(Math.random() * SYMBOLS.length)];\r\n\r\n// Dimensiuni role\r\nconst REELS = 5;\r\nconst ROWS = 3;\r\n\r\nconst SlotMachine: React.FC = () => {\r\n  // Starea rolelor: matrice 5 coloane x 3 rânduri simboluri\r\n  const [reels, setReels] = useState<string[][]>(\r\n    Array.from({ length: REELS }, () => Array.from({ length: ROWS }, getRandomSymbol))\r\n  );\r\n\r\n  // Starea pentru animatie \"spinning\"\r\n  const [spinning, setSpinning] = useState(false);\r\n\r\n  const spin = () => {\r\n    if (spinning) return; // prevenim spam click\r\n\r\n    setSpinning(true);\r\n\r\n    // Simulăm \"învârtirea\" cu delay-uri\r\n    let spinsCount = 0;\r\n    const maxSpins = 10;\r\n\r\n    const interval = setInterval(() => {\r\n      setReels(\r\n        Array.from({ length: REELS }, () => Array.from({ length: ROWS }, getRandomSymbol))\r\n      );\r\n\r\n      spinsCount++;\r\n      if (spinsCount >= maxSpins) {\r\n        clearInterval(interval);\r\n        setSpinning(false);\r\n      }\r\n    }, 150); // actualizare simboluri la fiecare 150ms\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: 50, color: '#fff', fontFamily: 'Arial' }}>\r\n      <h1>🎰 Slot Machine - Shiny Crown Style 🎰</h1>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          gap: 12,\r\n          marginBottom: 30,\r\n          backgroundColor: '#222',\r\n          padding: 20,\r\n          borderRadius: 12,\r\n          boxShadow: '0 0 15px gold',\r\n          width: 'fit-content',\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto',\r\n        }}\r\n      >\r\n        {reels.map((col, colIndex) => (\r\n          <div\r\n            key={colIndex}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              gap: 12,\r\n              backgroundColor: '#111',\r\n              padding: 10,\r\n              borderRadius: 8,\r\n              width: 70,\r\n              boxShadow: 'inset 0 0 10px #facc15',\r\n            }}\r\n          >\r\n            {col.map((symbol, rowIndex) => (\r\n              <div\r\n                key={rowIndex}\r\n                style={{\r\n                  width: 60,\r\n                  height: 60,\r\n                  fontSize: 38,\r\n                  backgroundColor: '#000',\r\n                  color: 'gold',\r\n                  borderRadius: 6,\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  boxShadow: 'inset 0 0 8px rgba(255,255,255,0.5)',\r\n                  userSelect: 'none',\r\n                }}\r\n              >\r\n                {symbol}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button\r\n        onClick={spin}\r\n        disabled={spinning}\r\n        style={{\r\n          padding: '12px 28px',\r\n          fontSize: 18,\r\n          fontWeight: 'bold',\r\n          backgroundColor: spinning ? '#444' : '#10b981',\r\n          border: 'none',\r\n          borderRadius: 8,\r\n          color: 'white',\r\n          cursor: spinning ? 'not-allowed' : 'pointer',\r\n          boxShadow: spinning ? 'none' : '0 0 10px #10b981',\r\n          transition: 'background-color 0.3s',\r\n        }}\r\n      >\r\n        {spinning ? 'Se învârte...' : 'Rulează roata! 🎰'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotMachine;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}