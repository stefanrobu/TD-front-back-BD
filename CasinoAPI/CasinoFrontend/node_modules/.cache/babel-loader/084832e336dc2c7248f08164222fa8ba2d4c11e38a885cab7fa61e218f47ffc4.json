{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Szilard\\\\Documents\\\\proi\\\\ux-ui-frontpage\\\\src\\\\components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nume, setNume] = useState(\"\");\n  const [prenume, setPrenume] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const handleRegister = async () => {\n    setError(null);\n    setSuccess(null);\n    if (!email || !password || !nume || !prenume) {\n      setError(\"Toate câmpurile sunt obligatorii.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"https://localhost:7239/api/Client/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          EmailClient: email,\n          ParolaClient: password,\n          NumeClient: nume,\n          PrenumeClient: prenume\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || \"Eroare la înregistrare.\");\n        return;\n      }\n      setSuccess(\"Cont creat cu succes! Poți să te loghezi acum.\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setNume(\"\");\n      setPrenume(\"\");\n    } catch (err) {\n      setError(\"Eroare la conectarea cu serverul.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 border rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: \"\\xCEnregistrare Cont\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600 mb-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-600 mb-2\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      className: \"w-full mb-3 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Parol\\u0103\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"w-full mb-3 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nume\",\n      value: nume,\n      onChange: e => setNume(e.target.value),\n      className: \"w-full mb-3 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Prenume\",\n      value: prenume,\n      onChange: e => setPrenume(e.target.value),\n      className: \"w-full mb-3 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      className: \"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition\",\n      children: \"\\xCEnregistreaz\\u0103-te\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"kxzo6MqStd8XHJHbNBfURSy96oQ=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","nume","setNume","prenume","setPrenume","error","setError","success","setSuccess","handleRegister","response","fetch","method","headers","body","JSON","stringify","EmailClient","ParolaClient","NumeClient","PrenumeClient","data","json","ok","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Szilard/Documents/proi/ux-ui-frontpage/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nume, setNume] = useState(\"\");\r\n  const [prenume, setPrenume] = useState(\"\");\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n\r\n  const handleRegister = async () => {\r\n    setError(null);\r\n    setSuccess(null);\r\n\r\n    if (!email || !password || !nume || !prenume) {\r\n      setError(\"Toate câmpurile sunt obligatorii.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"https://localhost:7239/api/Client/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          EmailClient: email,\r\n          ParolaClient: password,\r\n          NumeClient: nume,\r\n          PrenumeClient: prenume,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        setError(data.message || \"Eroare la înregistrare.\");\r\n        return;\r\n      }\r\n\r\n      setSuccess(\"Cont creat cu succes! Poți să te loghezi acum.\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setNume(\"\");\r\n      setPrenume(\"\");\r\n    } catch (err) {\r\n      setError(\"Eroare la conectarea cu serverul.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 border rounded shadow\">\r\n      <h2 className=\"text-2xl mb-4\">Înregistrare Cont</h2>\r\n\r\n      {error && <p className=\"text-red-600 mb-2\">{error}</p>}\r\n      {success && <p className=\"text-green-600 mb-2\">{success}</p>}\r\n\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        className=\"w-full mb-3 p-2 border rounded\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Parolă\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        className=\"w-full mb-3 p-2 border rounded\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Nume\"\r\n        value={nume}\r\n        onChange={(e) => setNume(e.target.value)}\r\n        className=\"w-full mb-3 p-2 border rounded\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Prenume\"\r\n        value={prenume}\r\n        onChange={(e) => setPrenume(e.target.value)}\r\n        className=\"w-full mb-3 p-2 border rounded\"\r\n      />\r\n\r\n      <button\r\n        onClick={handleRegister}\r\n        className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition\"\r\n      >\r\n        Înregistrează-te\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EAE3D,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCH,QAAQ,CAAC,IAAI,CAAC;IACdE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI,CAACX,KAAK,IAAI,CAACE,QAAQ,IAAI,CAACE,IAAI,IAAI,CAACE,OAAO,EAAE;MAC5CG,QAAQ,CAAC,mCAAmC,CAAC;MAC7C;IACF;IAEA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,WAAW,EAAEpB,KAAK;UAClBqB,YAAY,EAAEnB,QAAQ;UACtBoB,UAAU,EAAElB,IAAI;UAChBmB,aAAa,EAAEjB;QACjB,CAAC;MACH,CAAC,CAAC;MAEF,MAAMkB,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAElC,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;QAChBjB,QAAQ,CAACe,IAAI,CAACG,OAAO,IAAI,yBAAyB,CAAC;QACnD;MACF;MAEAhB,UAAU,CAAC,gDAAgD,CAAC;MAC5DV,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;MACfE,OAAO,CAAC,EAAE,CAAC;MACXE,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACZnB,QAAQ,CAAC,mCAAmC,CAAC;IAC/C;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKgC,SAAS,EAAC,kDAAkD;IAAAC,QAAA,gBAC/DjC,OAAA;MAAIgC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEnD1B,KAAK,iBAAIX,OAAA;MAAGgC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEtB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDxB,OAAO,iBAAIb,OAAA;MAAGgC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAEpB;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5DrC,OAAA;MACEsC,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAErC,KAAM;MACbsC,QAAQ,EAAGC,CAAC,IAAKtC,QAAQ,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CR,SAAS,EAAC;IAAgC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFrC,OAAA;MACEsC,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,aAAQ;MACpBC,KAAK,EAAEnC,QAAS;MAChBoC,QAAQ,EAAGC,CAAC,IAAKpC,WAAW,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CR,SAAS,EAAC;IAAgC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFrC,OAAA;MACEsC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEjC,IAAK;MACZkC,QAAQ,EAAGC,CAAC,IAAKlC,OAAO,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCR,SAAS,EAAC;IAAgC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFrC,OAAA;MACEsC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAE/B,OAAQ;MACfgC,QAAQ,EAAGC,CAAC,IAAKhC,UAAU,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CR,SAAS,EAAC;IAAgC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAEFrC,OAAA;MACE4C,OAAO,EAAE7B,cAAe;MACxBiB,SAAS,EAAC,yEAAyE;MAAAC,QAAA,EACpF;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnC,EAAA,CA1FID,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AA4Fd,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}